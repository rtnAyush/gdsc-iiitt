generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  // directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model StudentData {
  id                                    String    @id @default(uuid())
  student_name                          String
  student_email                         String    @unique
  institution                           String
  enrolment_date_time                   String
  enrolment_status                      String
  google_cloud_skills_boost_profile_url String
  of_courses_completed                  Int
  of_skill_badges_completed             Int
  of_gen_ai_game_completed              Int
  total_completions                     Int       @default(0)
  total_completions_of_both_pathways    String    @default("No")
  redemption_status                     String    @default("No")
  createdAt                             DateTime? @default(now())
  updatedAt                             DateTime? @updatedAt
}

model User {
  id        String    @id @default(uuid())
  username  String    @unique
  email     String?   @unique
  name      String
  role      Role      @default(USER)
  password  String?
  createdAt DateTime? @default(now())
}
model eventData {
  id              String     @id @default(uuid())
  title           String
  description     String
  dateTime        DateTime   @unique
  img             String
  location        String
}

model Member {
  id          String     @id @default(uuid())
  email       String?    @unique
  name        String
  role        MemberRole @default(MEMBER)
  position    String?
  imgUrl      String
  githubUrl   String
  linkedInUrl String
  createdAt   DateTime?  @default(now())
}

enum MemberRole {
  GDSC_LEAD
  LEAD
  MEMBER
}

enum Role {
  USER
  ADMIN
}
